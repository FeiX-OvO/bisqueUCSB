
FROM biodev.ece.ucsb.edu:5000/caffe-runtime:xenial

ENV DEBIAN_FRONTEND noninteractive
ENV IMGCNV=imgcnv_ubuntu16_2.4.3
RUN apt-get update -qq && apt-get install -qq -y apt-transport-https wget
RUN wget -q -O - https://biodev.ece.ucsb.edu/debian/cbi_repository_key.asc | apt-key add -

#RUN echo "deb  http://biodev.ece.ucsb.edu/debian/archive unstable/" > /etc/apt/sources.list.d/bisque.list \
#    && echo "deb http://www.deb-multimedia.org jessie main non-free" >> /etc/apt/sources.list.d/bisque.list

RUN  echo "deb http://ftp.ucsb.edu/pub/mirrors/linux/ubuntu-archive xenial main restricted universe" >> /etc/apt/sources.list.d/bisque.list


RUN wget -q https://bitbucket.org/dimin/bioimageconvert/downloads/$IMGCNV.tar.gz \
    && tar xf $IMGCNV.tar.gz \
    && mv $IMGCNV/imgcnv /usr/bin \
    && mv $IMGCNV/libimgcnv.so* /usr/lib/x86_64-linux-gnu/ \
    && rm -rf  $IMGCNV \
    && apt-get install -y --no-install-recommends \
    libswscale-ffmpeg3 libfftw3-3 libgdcm2.6 libavcodec-ffmpeg56 libavformat-ffmpeg56 libavutil-ffmpeg54 libhdf5-cpp-11

#    && (cd /usr/lib/x86_64-linux-gnu/; ln -s libimgcnv.so.2 libimgcnv.so ) \


#    && apt-get install -y  deb-multimedia-keyring --allow-unauthenticated \

RUN apt-get update  -qq \
    && apt-get install -y --no-install-recommends --allow-unauthenticated \
    git \
    locales \
    less \
    libasound2 \
    libasound2-data \
    libblas3 \
    libblas-common \
    libbz2-1.0 \
    libgdbm3 \
    libgdk-pixbuf2.0-0 \
    libgdk-pixbuf2.0-common \
    libgfortran3 \
    libglib2.0-0 \
    libglib2.0-data \
    libblosc1 \
    libgomp1 \
    libgv-python \
    libice6 \
    libjasper1 \
   libjbig0 \
    libjpeg62 \
    liblapack3 \
    liblzo2-2 \
    libmagic1 \
    libogg0 \
    libopenjpeg5 \
    libopenslide0 \
    libopenslide-dev \
    liborc-0.4-0 \
    libpixman-1-0 \
    libpng12-0 \
    libpq5 \
    libpython2.7-minimal \
    libquadmath0 \
    libschroedinger-1.0-0 \
    libsm6 \
    libsqlite3-0 \
    libstdc++5 \
    libtheora0 \
    libtiff5-dev \
    libx11-6 \
    libx11-data \
    libxau6 \
    libxcb1 \
    libxcb-render0 \
    libxcb-shm0 \
    libxdmcp6 \
    libxext6 \
    libxml2 \
    libxrender1 \
    libxslt1.1 \
    libxvidcore4 \
    mercurial \
    openjdk-8-jdk \
    python-minimal \
    ##### PYTHON 3 #####
    build-essential \
    vim  \ 
    sudo \
  && apt-get clean \
  && find  /var/lib/apt/lists/ -type f -delete



############ PYTHON 3   ################

# RUN apt-get update && apt-get install \
#   -y --no-install-recommends python3 python3-virtualenv

# ENV VENV_PY3=/opt/bqpy3
# RUN python3 -m virtualenv --python=/usr/bin/python3 /opt/bqpy3
# ENV PATH="$VENV_PY3/bin:$PATH"

############ PYTHON 3   ################


RUN echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen && locale-gen
ENV LANG en_US.UTF-8
RUN locale

#ENV BISQUE_UID 1000
#ENV BISQUE_USER bisque
#RUN adduser --uid $BISQUE_UID --disabled-login --gecos "Bisque" --home /run/bisque --shell /bin/bash $BISQUE_USER \
#    &&  echo "$BISQUE_USER ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers

# Set workdir early  as may wipe out contents
WORKDIR /source
COPY . /source
COPY run-bisque.sh virtualenv.sh /builder/
COPY start-bisque.sh /builder/start-scripts.d/R50-start-bisque.sh
COPY builder/ /builder/build-scripts.d/
COPY boot/ /builder/boot-scripts.d/

# Install dependencies:
#RUN pip3 install -r requirements3.txt

# Change Executable Permissions
RUN find /builder/ -type f -iname "*.sh" -exec chmod +x {} \;
RUN find /boot/ -type f -iname "*.sh" -exec chmod +x {} \;


RUN /builder/virtualenv.sh

# The following is very slow
#ADD https://biodev.ece.ucsb.edu/hg/bisque/archive/tip.tar.gz /source
#RUN tar xzf tip.tar.gz

ENV PY_INDEX=https://biodev.ece.ucsb.edu/py/bisque/xenial/+simple
RUN /builder/run-bisque.sh build

#RUN wget https://github.com/Yelp/dumb-init/releases/download/v1.1.3/dumb-init_1.1.3_amd64.deb \
#    && dpkg -i dumb-init_*.deb \
#    && rm dumb-init*.deb
#ENTRYPOINT [ "/usr/bin/dumb-init", "/root/run-bisque.sh" ]

# RUN . /opt/bqpy3/bin/activate && pip install -r requirements3.txt && deactivate

#USER $BISQUE_USER
ENTRYPOINT [ "/builder/run-bisque.sh"]
CMD [ "bootstrap","start"]
